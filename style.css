# compiled output
/dist
/tmp
/out-tsc

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# IDEs and editors
.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# misc
.sass-cache
connect.lock
typings

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*


# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next

# Lerna
lerna-debug.log

# System Files
.DS_Store
Thumbs.db 
 77  index.html 
@@ -0,0 +1,77 @@
head>
    <title>U.S. ELECTION MAP</title>

    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400italic,400,700|Montserrat:400,700' rel='stylesheet' type='text/css'>
    <link href="https://fonts.googleapis.com/css?family=Bitter" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="style.css">

</head>

<body onload="onLoad();">
<div class="page">
    <header>
        <h1>U.S. ELECTION MAP</h1>
    </header>

    <div class="map-container">

        <canvas id="map_canvas" width="800" height="550" style="position:relative;">
        </canvas>

        <table id='stateResults' style="position:absolute; bottom:10px; right:10px;">
            <theader>
                <tr>
                    <th>STATE NAME</th>
                    <th>Abbreviation</th>
                </tr>
            </theader>
            <tbody>
            <tr>
                <td class="name-1">NAME1</td>
                <td class="name-1">RESULTS1</td>
            </tr>
            <tr>
                <td class="name-2">NAME2</td>
                <td class="name-2">RESULTS2</td>
            </tr>
            <tr>
                <td class="winner">WINNER:</td>
                <td class="winner">WINNER NAME</td>
            </tr>
            </tbody>
        </table>

        <table id='countryResults' style="position:absolute; top:10px; left:10px;">
            <tbody>
            <tr>
                <td class="name-1">NAME1</td>
                <td class="name-1">RESULTS1</td>
                <td class="name-2">NAME2</td>
                <td class="name-2">RESULTS2</td>
                <th>WINNER</th>
                <th>Name</th>
            </tr>
            </tbody>
        </table>

    </div>
    <br clear="all">
    <footer>
        <p>&copy; Skillcrush 2016 <span>//</span> HTML5 Map Created By: <a href="http://dougx.net/map/usmap.html" target="_blank">DougX.net</a></p>
    </footer>

</div>

<!--
JavaScript files are added just before </body> so all HTML loads first.
This can make your page appear to load faster and helps avoid missing HTML errors.
 -->

<!-- map.js -->
<script type="text/javascript" src="https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2017/11/map.js"></script>
<script type="text/javascript" src="script.js"></script>
<!-- custom js (uncomment when you've added your custom script.js file) -->
<!--<script type="text/javascript" src="script.js"></script>-->

</body>
</html> 
 137  main.js 
@@ -0,0 +1,137 @@
var winner = {};
var newCandidate = function(candidateName, partyColor)
  {
    var candidate = {};
    candidate.name = candidateName;
    candidate.electionResults = null;
    candidate.votes = 0;
    candidate.partyColor = partyColor;

    candidate.announceCandidate = function()
    {
      console.log (this.name + " has entered the race!");
    };

    candidate.announceCandidate();

    return candidate;
  }

var candidate1 = newCandidate("Hermione Granger",[132, 17, 11]);
var candidate2 = newCandidate("Natasha Romonoff",[245, 141, 136]);

console.log (candidate1.name + "'s party color is " + candidate1.partyColor);
console.log (candidate2.name + "'s party color is " + candidate2.partyColor);

candidate1.electionResults = [5, 1, 7, 2, 33, 6, 4, 2, 1, 14, 8, 3, 1, 11, 11, 0, 5, 3, 3, 3, 7, 4, 8, 9, 3, 7, 2, 2, 4, 2, 8, 3, 15, 15, 2, 12, 0, 4, 13, 1, 3, 2, 8, 21, 3, 2, 11, 1, 3, 7, 2];
candidate2.electionResults = [4, 2, 4, 4, 22, 3, 3, 1, 2, 15, 8, 1, 3, 9, 0, 6, 1, 5, 5, 1, 3, 7, 8, 1, 3, 3, 1, 3, 2, 2, 6, 2, 14, 0, 1, 6, 7, 3, 7, 3, 6, 1, 3, 17, 3, 1, 2, 11, 2, 3, 1];

candidate1.electionResults[9]=1;
candidate2.electionResults[9]=28;
candidate1.electionResults[4]=17;
candidate2.electionResults[4]=38;
candidate1.electionResults[43]=11;
candidate2.electionResults[43]=27;

console.log (candidate1.electionResults);
console.log (candidate2.electionResults);

var setStateResults = function(state){

  theStates[state].winner = null;

    if (candidate1.electionResults[state] > candidate2.electionResults[state]){
    theStates[state].winner = candidate1;
    }

    else if (candidate2.electionResults[state] > candidate1.electionResults[state]){
    theStates[state].winner = candidate2;
    }

  var stateWinner = theStates[state].winner;

  if (stateWinner !== null){
    theStates[state].rgbColor = stateWinner.partyColor;
    }

  else {
    theStates[state].rgbColor = [11,32,57]
  }

var stateInfoTable = document.getElementById('stateResults');
var header = stateInfoTable.children[0];
var body = stateInfoTable.children[1];
var stateName = header.children[0].children[0];
var abbrev = header.children[0].children[1];
var candidate1Name = body.children[0].children[0];
var candidate2Name = body.children[1].children[0];
var candidate1Results = body.children[0].children[1];
var candidate2Results = body.children[1].children[1];
var winnersName = body.children[2].children[1];

  stateName.innerText = theStates[state].nameFull;

  abbrev.innerText = theStates[state].nameAbbrev;

  candidate1Name.innerText = candidate1.name;
  candidate2Name.innerText = candidate2.name;


  candidate1Results.innerText = candidate1.electionResults[state];
  candidate2Results.innerText = candidate2.electionResults[state];

  if (candidate1.electionResults[state] > candidate2.electionResults[state]){
    winnersName.innerText = candidate1.name;
   }

  else if (candidate2.electionResults[state] > candidate1.electionResults[state]){
    winnersName.innerText = candidate2.name;}

  else {winnersName.innerText = "Tied result";}
}


candidate1.votes = function()
  {
    this.votes = 0;
      for (var i = 0; i < this.electionResults.length; i++)
        {
          this.votes = this.votes + this.electionResults[i];
          console.log (this.votes);
        }
}


candidate2.votes = function()
  {
    this.votes = 0;
      for (var i = 0; i < this.electionResults.length; i++)
        {
          this.votes = this.votes + this.electionResults[i];
          console.log (this.votes);
        }
}

candidate1.votes()

candidate2.votes()

if (candidate1.votes > candidate2.votes){
  winner = candidate1.name;
}

else if (candidate2.votes == candidate1.votes){
  winner = "It's a draw!";
}

else {winner = candidate2.name;}

console.log (winner);

var countryTable = document.getElementById ('countryResults');
  var row = countryTable.children[0].children[0];
  row.children[0].innerText = candidate1.name;
  row.children[1].innerText = candidate1.votes;
  row.children[2].innerText = candidate2.name;
  row.children[3].innerText = candidate2.votes;
  row.children[5].innerText = winner; 
